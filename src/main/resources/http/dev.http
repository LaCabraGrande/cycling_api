### A simple get request to the test endpoint. No need for login
GET http://localhost:7070/api/auth/test/

### Create a new user - this one will only get a USER role by default
POST http://localhost:7070/api/auth/register/
Content-Type: application/json

{
    "username": "user",
    "password": "test123"
}

###
POST http://localhost:7070/api/auth/login/

{
    "username": "user",
    "password": "test123"
}

> {%
    client.global.set("jwt_token", response.body.token);
    console.log("JWT Token:", client.global.get("jwt_token"));
%}

###
GET http://localhost:7070/api/protected/user_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

###
GET http://localhost:7070/api/protected/admin_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Add admin role to user
POST http://localhost:7070/api/auth/user/addrole/
Accept: application/json
Authorization: Bearer {{jwt_token}}

{
    "role": "superman"
}
Accept: application/json
Authorization: Bearer {{jwt_token}}

###
GET http://localhost:7070/api/bicycles
Accept: application/json

###

GET http://localhost:7070/api/bicycles/2
Accept: application/json

###

POST http://localhost:7070/api/bicycles
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "brand": "Trek",
  "model": "Domane SL6",
  "size": "56cm",
  "price": 3500,
  "description": "High-performance road bike"
}

###

PUT http://localhost:7070/api/bicycles/3
Content-Type: application/json

{
  "brand": "Specialized",
  "model": "Roubaix",
  "size": "54cm",
  "price": 4200,
  "description": "Comfortable endurance bike"
}

###

DELETE http://localhost:7070/api/bicycles/5

###

// Frame API

GET http://localhost:7070/api/frames

###

GET http://localhost:7070/api/frames/1

###

POST http://localhost:7070/api/bicycles/3/frame/3
Content-Type: application/json

{
  "bicycleId": 3,
  "frameId": 3
}
